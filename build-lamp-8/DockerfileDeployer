##############################################
# PHP App Container
##############################################
#
# Creates a PHP container for hosting
# WordPress and other PHP sites. See
# docker-compose.yml for usage.
#

# container
# reference: https://github.com/docker-library/docs/blob/master/php/README.md
FROM php:8-cli

# app directory on the container
WORKDIR /var/myapp

# volume directory for source code
VOLUME ["/var/myapp"]

# install additional packages
RUN apt-get update \
&& apt-get upgrade -y \
&& apt-get install -y \
    curl \
    git \
    libzip-dev \
    libpq-dev \
    libxml2-dev \
    less \
    net-tools \
    sudo \
    imagemagick \
    libmagickwand-dev \
    libmemcached-dev \
    supervisor \
    vim \
    unzip \
    wkhtmltopdf

# install nodejs 12
RUN curl -fsSL https://deb.nodesource.com/setup_12.x | bash - \
    && apt-get install -y nodejs build-essential

# symlink wkhtmltopdf to match production
RUN ln -s /usr/bin/wkhtmltopdf /usr/local/bin/wkhtmltopdf

# install additional php extensions
RUN docker-php-ext-install \
    bcmath \
    calendar \
    gd \
    gettext \
    mysqli \
    opcache \
    pdo \
    pdo_mysql \
    pdo_pgsql \
    soap \
    sockets \
    zip

# adjust permissions
#RUN chown -R www-data:www-data /var/www/vhosts/myvhost

# install pecl extensions
RUN pecl install apcu
RUN pecl install memcached

# php customizations
VOLUME ["/usr/local/etc/php/conf.d/custom.ini"]

# composer
RUN php -r "copy('https://getcomposer.org/installer', '/root/composer-setup.php');"
RUN php /root/composer-setup.php --install-dir=/usr/local/bin --filename=composer
RUN php -r "unlink('/root/composer-setup.php');"

# deployer
RUN curl -LO --output-dir /root https://deployer.org/deployer.phar
RUN mv /root/deployer.phar /usr/local/bin/dep
RUN chmod +x /usr/local/bin/dep

# cmd
CMD ["dep", "deploy", "staging"]